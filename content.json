{"meta":{"title":"Tiveloper","subtitle":"Technical Development","description":"Programming, Server Management - Roller Sports, Bicycle","author":"Luis Kim","url":"figo2264.github.io"},"pages":[],"posts":[{"title":"깃털보다 가벼운 인텔리J 아이디어(IntelliJ Idea) 팁 15 - 두개 이상의 VCS repository 사용하기","slug":"intellij-running-two-repositories","date":"2017-11-22T01:39:20.000Z","updated":"2017-11-22T04:11:20.950Z","comments":true,"path":"2017/11/22/intellij-running-two-repositories/","link":"","permalink":"figo2264.github.io/2017/11/22/intellij-running-two-repositories/","excerpt":"","text":"여러 VCS 운용하기우선 현재 설정은 개인적으로 진행하고 있는 프로젝트에 적용해서 사용하고 있는 방법입니다. 우선 인텔리J에서는 하나의 프로젝트에 여러개의 모듈을 생성할 수 있습니다. 여러 모듈이 생성될 경우, 분명한건 각 모듈별로 다른 repository를 사용할 수 밖에 없다고 보여집니다.IntelliJ에서는 생각보다 간단하게 VCS repository를 운용하실 수 있습니다. 본인의 경우, 아래의 조건하에서 사용하고 있으며, 다른 환경에서 사용법은 다를 수 있다고 보여집니다만, 큰 차이는 없을것으로 보여집니다. Server / Client 폴더가 완전히 분리되어 있음. git clone은 외부 git tool을 통해서 진행함. 이후 intellij에서 Project From Existing Source를 통해서 Server단 프로젝트를 import 후, Sub module로서 Project 폴더 외부에 client project를 import함. 이러한 이유로 인해서 Git Branch에서 Server단은 Project명으로 관리되며, Frontend부분은 전체 경로로 관리가 되는 듯 싶습니다. 위와 같은 상황에서 Intellij에서의 VCS관리 설정은 아래와 같이 진행하면 됩니다. 우선 Settings –&gt; Version Control에서 각 폴더별로 VCS root 폴더를 등록합니다. VCS root 폴더 등록시 VCS종류를 명시합니다. View –&gt; Toll Windows –&gt; Version Control 선택해서 하단부에 VCS 패널을 활성화 시킵니다. 패널을 보면 두개의 git log graph가 있음을 확인할 수 있으며, 그 왼쪽으로 두개의 색상이 구분되어 있음을 확인하실 수 있습니다. VCS 패널의 상단에 보면 Paths:All 이라는 메뉴가 있는데 이를 클릭해보면 두개의 VCS 저장소별로 다른 색상을 가지고 있음을 확인하실 수 있습니다. IntelliJ 맨 오른쪽 하단에서 현재의 branch를 확인하실 수 있으며, 클릭하면 관련 git 메뉴를 확인하 실 수 있습니다. 아래 이미지에서 보시는 바와 같이, 두개의 repository가 관리되고 있음을 확인할 수 있습니다. 문제는 Repositories 하위에 있는 개별 repository에서가 아닌 전체 메뉴에서 새로운 Branch를 생성하면, 특이하게 관리되는 모든 repository에서 동일한 branch가 생성이 됩니다. 이점만 주의하시면 충분히 git extension과 같은 외부 툴을 사용하지 않더라도, IntelliJ만으로도 Version Control이 가능하리라고 보여집니다.","categories":[{"name":"Tools","slug":"Tools","permalink":"figo2264.github.io/categories/Tools/"},{"name":"IntelliJ","slug":"Tools/IntelliJ","permalink":"figo2264.github.io/categories/Tools/IntelliJ/"}],"tags":[{"name":"Jetbrains","slug":"Jetbrains","permalink":"figo2264.github.io/tags/Jetbrains/"},{"name":"IntelliJ","slug":"IntelliJ","permalink":"figo2264.github.io/tags/IntelliJ/"},{"name":"Idea","slug":"Idea","permalink":"figo2264.github.io/tags/Idea/"},{"name":"processing","slug":"processing","permalink":"figo2264.github.io/tags/processing/"},{"name":"Intellij Idea","slug":"Intellij-Idea","permalink":"figo2264.github.io/tags/Intellij-Idea/"},{"name":"vcs","slug":"vcs","permalink":"figo2264.github.io/tags/vcs/"},{"name":"git","slug":"git","permalink":"figo2264.github.io/tags/git/"},{"name":"multiple","slug":"multiple","permalink":"figo2264.github.io/tags/multiple/"},{"name":"repositories","slug":"repositories","permalink":"figo2264.github.io/tags/repositories/"},{"name":"Hadi Hariri","slug":"Hadi-Hariri","permalink":"figo2264.github.io/tags/Hadi-Hariri/"}]},{"title":"깃털보다 가벼운 인텔리J 아이디어(IntelliJ Idea) 팁 14 - Lombok Plugin 사용하기","slug":"intellij-lombok-plugin","date":"2017-11-14T02:18:37.000Z","updated":"2017-11-22T04:11:42.279Z","comments":true,"path":"2017/11/14/intellij-lombok-plugin/","link":"","permalink":"figo2264.github.io/2017/11/14/intellij-lombok-plugin/","excerpt":"","text":"Lombok 플러그인 설치하기Java개발하면서 99% 사용되는 개념 중 하나가 바로 Encapsulation(Getting / Setting)이라고 생각이 됩니다.문제는 반드시 사용되는 개념임에도 불구하고, 손이 많이 가는 작업이라는 점이죠. 이런 불편함을 해소하기 위해서 주로 사용하는 라이브러리가 바로 Lombok이며, 해당 라이브러리를 모르시는 분은 없을거라고 생각됩니다. lombok관련 문법은 공식 사이트에서 확인하실 수 있습니다.https://projectlombok.org/ 기본적으로 IntelliJ에는 Lombok 플러그인이 설치되어 있지 않습니다.Lombok 플러그인 설치는 아래 메뉴에서 하실 수 있습니다. File &gt; Settings &gt; Plugins 저는 이미 설치가 되어 있습니다만, 앞서 말했듯이 기본적으로 설치가 되어 있지 않으므로, Plugins 화면의 하단부에 있는 “Browser Repositories” 버튼을 클릭 후,Repository에서 Lombok 플러그인을 검색 후, 설치하시면 됩니다. 설치 후, IntelliJ를 재시작 하시면 됩니다. IntelliJ 재 시작 후에는 오른쪽 하단부에 아래와 같이 “lombok requires annotation processing”이라는 경고 메세지가 뜹니다. 이때에는 아래와 같은 메뉴로 이동 하신 후, File &gt; Other Settings &gt; Default Settings &gt; Build, Execution, Deployment &gt; Compiler Enable annotation processing을 체크해서 활성화 해주시면 됩니다.","categories":[{"name":"Tools","slug":"Tools","permalink":"figo2264.github.io/categories/Tools/"},{"name":"IntelliJ","slug":"Tools/IntelliJ","permalink":"figo2264.github.io/categories/Tools/IntelliJ/"}],"tags":[{"name":"Jetbrains","slug":"Jetbrains","permalink":"figo2264.github.io/tags/Jetbrains/"},{"name":"IntelliJ","slug":"IntelliJ","permalink":"figo2264.github.io/tags/IntelliJ/"},{"name":"Idea","slug":"Idea","permalink":"figo2264.github.io/tags/Idea/"},{"name":"intellij idea","slug":"intellij-idea","permalink":"figo2264.github.io/tags/intellij-idea/"},{"name":"lombok","slug":"lombok","permalink":"figo2264.github.io/tags/lombok/"},{"name":"annotation","slug":"annotation","permalink":"figo2264.github.io/tags/annotation/"},{"name":"processing","slug":"processing","permalink":"figo2264.github.io/tags/processing/"}]},{"title":"깃털보다 가벼운 인텔리J 아이디어(IntelliJ Idea) 팁 13 - How To Install IntelliJ without the Admin Previleges.","slug":"IntelliJ-Tip-13-Install-Without-Admin-Right","date":"2017-11-13T04:33:43.000Z","updated":"2017-11-22T04:12:04.960Z","comments":true,"path":"2017/11/13/IntelliJ-Tip-13-Install-Without-Admin-Right/","link":"","permalink":"figo2264.github.io/2017/11/13/IntelliJ-Tip-13-Install-Without-Admin-Right/","excerpt":"","text":"Administrator가 없이 과연 IntelliJ가 설치가 가능할까요?일단 대답은 Yes입니다. 사실 간단한 검색만으로도 확인이 가능하지만, 기본적으로 관리자 권한(Admin) 없니 설치는 가능합니다. 솔찍히 본인도 설치만 해 본 케이스라서, 추가적으로 어떤 제약사항이 있을지는 잘 모르겠지만, 기본적으로 잘 설치가 됩니다. 설치 방법은 아주 간단합니다. 윈도우 차원에서 관리자 계정 정보를 입력하라고 나왔을 때, 그냥 Cancel(취소)를 누르면 됩니다. 그럴 경우, 설치 경로가 아래와 같이 변경이 됩니다.1C:\\Users\\&#123;user id&#125;\\AppData\\Roaming\\JetBrains\\IntelliJ IDEA 2017.2.5","categories":[{"name":"Tools","slug":"Tools","permalink":"figo2264.github.io/categories/Tools/"},{"name":"IntelliJ","slug":"Tools/IntelliJ","permalink":"figo2264.github.io/categories/Tools/IntelliJ/"}],"tags":[{"name":"Jetbrains","slug":"Jetbrains","permalink":"figo2264.github.io/tags/Jetbrains/"},{"name":"IntelliJ","slug":"IntelliJ","permalink":"figo2264.github.io/tags/IntelliJ/"},{"name":"No Admin Right","slug":"No-Admin-Right","permalink":"figo2264.github.io/tags/No-Admin-Right/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-11-13T03:24:26.136Z","updated":"2017-11-13T03:24:26.137Z","comments":true,"path":"2017/11/13/hello-world/","link":"","permalink":"figo2264.github.io/2017/11/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}